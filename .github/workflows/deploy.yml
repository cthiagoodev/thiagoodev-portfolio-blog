name: Deploy Portfolio

on:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  group: portfolio-deploy
  cancel-in-progress: true

jobs:
  deploy:
    name: Build and Deploy on VPS
    runs-on: self-hosted
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Build Application
        run: ./gradlew clean build -x test

      - name: Deploy with Docker Compose
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          GITHUB_URI: ${{ secrets.GITHUB_URI }}
        run: |
          echo "ðŸ§© Deploying with Docker Compose..."

          docker-compose -f docker-compose.prod.yml down --remove-orphans || true
          docker system prune -af --volumes || true

          docker-compose -f docker-compose.prod.yml build --no-cache
          docker-compose -f docker-compose.prod.yml up -d

      - name: Verify Deployment
        run: |
          echo "âœ… Checking if container is running..."
          docker ps --filter "name=portfolio" --format "table {{.Names}}\t{{.Status}}"
